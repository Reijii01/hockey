import sqlite3
import time
from datetime import datetime, timedelta

from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ =================================================================
URL = "https://match-goda.ru/"                        # üîÅ —Ä–µ–∞–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã
BUTTON_CONTAINER_ID = "molecule-174596722953362380"
DB_PATH = "button_state.db"
INTERVAL = 60                                      # ‚è± –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
DRIVER_LIFETIME = timedelta(hours=1)               # –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ Chrome ~—Ä–∞–∑ –≤ —á–∞—Å
# ===============================================================================

def init_db():
    with sqlite3.connect(DB_PATH) as conn:
        c = conn.cursor()
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É, –µ—Å–ª–∏ –Ω–µ—Ç
        c.execute("""
            CREATE TABLE IF NOT EXISTS button_state (
                id INTEGER PRIMARY KEY, 
                text TEXT, 
                href TEXT
            )
        """)
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
        try:
            c.execute("ALTER TABLE button_state ADD COLUMN last_notified_text TEXT")
        except sqlite3.OperationalError:
            pass  # –∫–æ–ª–æ–Ω–∫–∞ —É–∂–µ –µ—Å—Ç—å
        try:
            c.execute("ALTER TABLE button_state ADD COLUMN last_notified_href TEXT")
        except sqlite3.OperationalError:
            pass  # –∫–æ–ª–æ–Ω–∫–∞ —É–∂–µ –µ—Å—Ç—å

        # –ï—Å–ª–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ –Ω–µ—Ç —Å—Ç—Ä–æ–∫–∏ —Å id=1, –≤—Å—Ç–∞–≤–ª—è–µ–º –µ—ë —Å –ø—É—Å—Ç—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
        c.execute("SELECT COUNT(*) FROM button_state WHERE id=1")
        if c.fetchone()[0] == 0:
            c.execute(
                "INSERT INTO button_state (id, text, href, last_notified_text, last_notified_href) VALUES (1, '', '', '', '')")

        conn.commit()


def load_previous_state():
    with sqlite3.connect(DB_PATH) as conn:
        c = conn.cursor()
        row = c.execute("SELECT text, href FROM button_state WHERE id = 1").fetchone()
    return {"text": row[0], "href": row[1]} if row else {"text": None, "href": None}

def save_state(text, href):
    with sqlite3.connect(DB_PATH) as conn:
        c = conn.cursor()
        if load_previous_state()["text"] is None:
            c.execute("INSERT INTO button_state (id, text, href) VALUES (1, ?, ?)", (text, href))
        else:
            c.execute("UPDATE button_state SET text = ?, href = ? WHERE id = 1", (text, href))
        conn.commit()

def create_driver():
    opts = Options()
    opts.add_argument("--headless=new")
    opts.add_argument("--disable-gpu")
    opts.add_argument("--no-sandbox")
    return webdriver.Chrome(options=opts)

def check_button(driver):
    driver.get(URL)
    time.sleep(2)                                    # –Ω–µ–±–æ–ª—å—à–æ–π wait –ø–æ–∫–∞ –Ω–µ –≤–Ω–µ–¥—Ä–∏—à—å WebDriverWait
    try:
        molecule = driver.find_element(By.ID, BUTTON_CONTAINER_ID)
        button   = molecule.find_element(By.XPATH, ".//a[contains(@class,'tn-atom')]")
        return button.text.strip(), button.get_attribute("href")
    except Exception as e:
        print(f"[!] –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–Ω–æ–ø–∫—É: {e}")
        return None, None

def main():
    init_db()
    driver = create_driver()
    driver_birth = datetime.utcnow()

    while True:
        # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –¥—Ä–∞–π–≤–µ—Ä, –µ—Å–ª–∏ ¬´–ø–æ—Å—Ç–∞—Ä–µ–ª¬ª
        if datetime.utcnow() - driver_birth > DRIVER_LIFETIME:
            driver.quit()
            driver = create_driver()
            driver_birth = datetime.utcnow()

        new_text, new_href = check_button(driver)
        if new_text is None:
            time.sleep(INTERVAL)
            continue

        prev = load_previous_state()
        if new_text != prev["text"] or new_href != prev["href"]:
            print(f"[üîî {datetime.now():%Y-%m-%d %H:%M:%S}] –ò–∑–º–µ–Ω–µ–Ω–∏–µ!")
            print(f"    –¢–µ–∫—Å—Ç : {prev['text']} ‚Üí {new_text}")
            print(f"    –°—Å—ã–ª–∫–∞: {prev['href']} ‚Üí {new_href}")
            save_state(new_text, new_href)
            # üëâ –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å send_telegram_message(...)

        else:
            print(f"[=] {datetime.now():%H:%M:%S} ‚Äî –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π")

        time.sleep(INTERVAL)

if __name__ == "__main__":
    main()

